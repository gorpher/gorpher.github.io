<?xml version="1.0" encoding="UTF-8"?>
<pattern:specification xmlns="http://www.ibm.com/software/rational/designpattern" xmlns:argument="http://www.ibm.com/software/rational/designpattern/argument" xmlns:attribute="http://www.ibm.com/software/rational/designpattern/attribute" xmlns:dependency="http://www.ibm.com/software/rational/designpattern/dependency" xmlns:operation="http://www.ibm.com/software/rational/designpattern/operation" xmlns:participant="http://www.ibm.com/software/rational/designpattern/participant" xmlns:pattern="http://www.ibm.com/software/rational/designpattern/pattern" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/software/rational/designpattern ..\schemas\designpattern.xsd">
	<pattern:name>Template Method</pattern:name>
	<pattern:description>template_method.html</pattern:description>
	<pattern:assignedLanguage>Analysis</pattern:assignedLanguage>
	<pattern:participants>
		<!-- Client -->
		<pattern:participant>
			<participant:name>Client</participant:name>
			<participant:required>false</participant:required>
			<participant:exportControl>public</participant:exportControl>
			<participant:multiplicity>1</participant:multiplicity>
			<participant:isAnyType>true</participant:isAnyType>
			<!-- attributes -->
			<participant:attributes>
				<participant:attribute>
					<attribute:name>theClass</attribute:name>
					<attribute:type>%AbstractClass%</attribute:type>
					<attribute:exportControl>public</attribute:exportControl>
					<attribute:cardinality>1</attribute:cardinality>
				</participant:attribute>
			</participant:attributes>
		</pattern:participant>
		<!-- Template Method -->
		<pattern:participant>
			<participant:name>AbstractClass</participant:name>
			<participant:required>true</participant:required>
			<participant:multiplicity>1</participant:multiplicity>
			<participant:exportControl>public</participant:exportControl>
			<participant:isAbstract>true</participant:isAbstract>
			<participant:isInterface>false</participant:isInterface>
<!--
			<participant:documentation><![CDATA[
AbstractClass. Defines Abstract primitive operations that concrete subclasses define to implement steps of an algorithm. Implements template method defining the skeleton of an algorithm.
]]></participant:documentation>
-->
			<!-- attributes -->
			<!-- operations -->
			<participant:operations>
				<participant:operation>
					<operation:name>templateMethod</operation:name>
					<operation:returnType>void</operation:returnType>
					<operation:exportControl>public</operation:exportControl>
					<operation:isAbstract>false</operation:isAbstract>
<!--
					<operation:documentation><![CDATA[
Call primitive operations...
]]></operation:documentation>
-->
					<!-- arguments -->
				</participant:operation>
				<participant:operation>
					<operation:name>primitiveOperation</operation:name>
					<operation:returnType>void</operation:returnType>
					<operation:exportControl>public</operation:exportControl>
					<operation:isAbstract>true</operation:isAbstract>
<!--
					<operation:documentation><![CDATA[
Abstract primitive operation which is implemented by Concrete Class.
]]></operation:documentation>
-->
					<!-- arguments -->
				</participant:operation>
			</participant:operations>
		</pattern:participant>
		<!-- ConcreteClass -->
		<!-- We will describe only a generic one.  All the rest will be similar -->
		<pattern:participant>
			<participant:name>ConcreteClass</participant:name>
			<participant:required>true</participant:required>
			<participant:multiplicity>n</participant:multiplicity>
			<participant:exportControl>public</participant:exportControl>
			<participant:isAbstract>false</participant:isAbstract>
			<participant:isInterface>false</participant:isInterface>
<!--
			<participant:documentation><![CDATA[
ConcreteClass. Implements the primitive operations for the algorithm.
]]></participant:documentation>
-->
			<!-- attributes -->
			<!-- operations -->
			<participant:operations>
				<participant:operation>
					<operation:name>primitiveOperation</operation:name>
					<operation:returnType>void</operation:returnType>
					<operation:exportControl>public</operation:exportControl>
					<operation:isAbstract>false</operation:isAbstract>
<!--
					<operation:documentation><![CDATA[
Implements AbstractClass's abstract primitive operation.
]]></operation:documentation>
-->
					<!-- arguments -->
				</participant:operation>
			</participant:operations>
			<!-- relationships -->
			<!-- Extends classes: -->
			<participant:extends>%AbstractClass%</participant:extends>
		</pattern:participant>
	</pattern:participants>
</pattern:specification>
